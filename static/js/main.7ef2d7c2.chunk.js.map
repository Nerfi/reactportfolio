{"version":3,"sources":["components/landingpage.js","components/Cards.js","components/projects.js","components/contact.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Cards","props","key","identifier","shadow","minWidth","color","height","background","backgroundImg","name","description","border","colored","Projects","useState","selectTab","setTab","activeTab","id","onChange","tabId","ripple","database","map","project","image","Contact","paddingTop","marginLeft","fontSize","fontFamily","Main","basename","exact","path","component","App","title","textDecoration","to","scroll","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ef2d7c2.chunk.js","sourcesContent":["import React from 'react';\nimport {Grid, Cell} from 'react-mdl';\n\n\nfunction LandingPage(){\n  return(\n  <div style={{width: '100%', margin: 'auto'}}>\n\n  <Grid className=\"landing-grid\">\n    <Cell col={12}>\n\n    <img\n    src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fcdn0.iconfinder.com%2Fdata%2Ficons%2Favatar-circle%2F248%2FBoy_man_male_mustache_smile_happy_adult_Avatar_-512.png&f=1&nofb=1\"\n    alt=\"avatar man\"\n    className=\"avatar-img\"\n    />\n\n    <div className=\"banner-text\">\n\n      <h1>Fullstack dev</h1>\n\n      <hr />\n      <p>HTML | CSS | Boostrap | JS | React | Rails | RoR</p>\n\n      <div className=\"social-links\">\n\n            {/*linkedin */}\n          <a href=\"https://www.linkedin.com/in/juanparedess/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\" fa fa-linkedin-square\" aria-hidden=\"true\"></i>\n          </a>\n\n            {/*  Github Link*/}\n           <a href=\"https://github.com/Nerfi\" rel=\"noopener noreferrer\" target=\"_blank\">\n          <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\n          </a>\n\n\n      </div>\n\n\n    </div>\n\n\n    </Cell>\n  </Grid>\n\n\n  </div>\n\n\n    )\n\n\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport {Card,CardTitle,CardText,CardActions,Button} from 'react-mdl';\n\nconst Cards = (props) => (\n  <div>\n\n     <Card  key={props.identifier} shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n        <CardTitle style={{color: '#fff', height: '176px', background: props.backgroundImg }}>{props.name}</CardTitle>\n          <CardText>\n           {props.description}\n         </CardText>\n           <CardActions border>\n            <Button colored>\n               <a href=\"https//:github.com/mjachowdhury/myPortfolio\">Github</a>\n            </Button>\n\n          <Button colored>Live Demo</Button>\n       </CardActions>\n\n      </Card>\n\n\n\n  </div>\n);\n\n\nexport default Cards;\n","import React,{useState} from 'react';\nimport {Tabs, Tab, Grid, Cell} from 'react-mdl';\nimport database from './database.json';\nimport Cards from './Cards';\n\n\n  const  Projects = () => {\n    const [selectTab, setTab] = useState(0);\n\n    const handleOnChange = (tabId) => setTab(tabId);\n\n  return(\n       <div>\n\n        <Tabs activeTab={selectTab} key={selectTab.id} onChange={handleOnChange} ripple>\n          <Tab>Ruby</Tab>\n          <Tab>React</Tab>\n          <Tab>Rails</Tab>\n        </Tabs>\n          <Grid>\n            <Cell col={12}>\n\n              {database[selectTab].map(project => {\n                return(\n                <div className=\"projects-grid\">\n                  <Cards\n                  identifier={project.id}\n                  name={project.name}\n                  backgroundImg={project.image}\n                  description={project.description}\n\n                  />\n                </div>\n                );\n\n              })}\n\n            </Cell>\n          </Grid>\n      </div>\n\n\n    )\n\n}\n\nexport default Projects;\n","import React from 'react';\nimport {Grid, Cell, List,ListItem, ListItemContent} from 'react-mdl';\n\nfunction Contact(){\n  return(\n\n    <div className=\"main-div\">\n        <Grid className=\"contact-grid\">\n           <Cell col={6}>\n           <h2>Juan Paredes</h2>\n           <img\n            src=\"https://cdn2.iconfinder.com/data/icons/avatar-2/512/Fred_man-512.png\"\n           alt=\"avatar\"\n           style={{height: '250px'}}\n            />\n            <p style={{ width: '75%', margin: 'auto', paddingTop: '2em', marginLeft: '-10px'}}>\n              Ruby on Rails/ React software developer with a clear vision.\n              My objective is not only to produce code, but to build awesome products in which I believe.\n              The part I love most about coding is the adrenaline you have when you solve a problem , coming up with fun ideas, implementing them, and seeing my idea work.\n              Also have a big interest in all related with A.I, now looking at working as a full-stack developer as it fits all of my career requirements: challenging work,\n              working with a team and having an impact\n            </p>\n\n           </Cell>\n\n\n         <Cell col={6}>\n\n          <h2>Contact Me</h2>\n          <hr />\n\n          <div className=\"contact-list\">\n            <List>\n\n               <ListItem>\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\n                    <i className=\"fa fa-phone-square\" aria-hidden=\"true\"/>\n                    (+34) 666-85-69-01\n                  </ListItemContent>\n                </ListItem>\n\n                <ListItem>\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\n                    <i className=\"fa fa-envelope\" aria-hidden=\"true\"/>\n                    juanchuu.jfpc@gmail.com\n                  </ListItemContent>\n                </ListItem>\n\n                <ListItem>\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\n                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"/>\n                     <a href=\"https://www.linkedin.com/in/juanparedess/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                     Juan Paredes\n                      </a>\n                  </ListItemContent>\n                </ListItem>\n\n\n                <ListItem>\n                  <ListItemContent style={{fontSize: '30px', fontFamily: 'Anton'}}>\n                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"/>\n                     <a href=\"https://github.com/Nerfi\" rel=\"noopener noreferrer\" target=\"_blank\">\n                     Github\n                      </a>\n                  </ListItemContent>\n                </ListItem>\n\n\n            </List>\n\n\n          </div>\n\n\n         </Cell>\n\n\n        </Grid>\n\n\n\n    </div>\n\n    )\n\n\n\n\n}\n\nexport default Contact;\n","import React from 'react';\nimport { Switch, Route , HashRouter} from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport Projects from './projects';\nimport Contact from './contact';\n\n\n\nfunction Main() {\n  return(\n    <HashRouter basename=\"/\">\n      <Switch>\n\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route exact path=\"/Projects\" component={Projects} />\n      <Route exact path=\"/Contact\" component={Contact} />\n\n    </Switch>\n  </HashRouter>\n    )\n\n\n}\n\n\n\n\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport {Layout,Header,Navigation,Drawer,Content} from 'react-mdl';\nimport Main from './components/main';\n\nfunction App() {\n  return (\n    <div>\n    <div className=\"demo-big-content\">\n\n      <Layout>\n          <Header className=\"header-color\" title={<Link style={{textDecoration: 'none', color: 'white'}} to=\"/\"> MyPortfolio </Link>} scroll>\n              <Navigation>\n\n                  <Link to=\"/Projects\">Projects</Link>\n                  <Link to=\"/Contact\">Contact</Link>\n\n              </Navigation>\n          </Header>\n          <Drawer title=\"Tit\">\n              <Navigation>\n\n                  <Link to=\"/Projects\">Projects</Link>\n                  <Link to=\"/Contact\">Contact</Link>\n\n              </Navigation>\n          </Drawer>\n          <Content>\n              <div className=\"page-content\" />\n              <Main/>\n          </Content>\n      </Layout>\n\n</div>\n\n\n    </div>\n     );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}